name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0

jobs:
  build_desktop:
    name: Build Desktop on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --production

      # macOS-specific steps for code signing and notarization
      - name: Import Apple Developer Certificate (macOS only)
        if: matrix.os == 'macos-latest'
        env:
          DEVELOPER_ID_CERT: ${{ secrets.DEVELOPER_ID_CERT }}
          DEVELOPER_ID_CERT_PASSWORD: ${{ secrets.DEVELOPER_ID_CERT_PASSWORD }}
        run: |
          echo "$DEVELOPER_ID_CERT" | base64 --decode > developer_id_certificate.p12
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import developer_id_certificate.p12 -k build.keychain -P "$DEVELOPER_ID_CERT_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" build.keychain

      - name: List Certificates in Keychain (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          security find-identity -v -p codesigning

      - name: Build and Release
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: true
        env:
          DEBUG: electron-notarize*
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
